version: "3.8"

services:
     apache:
        build:
           context: ./php
        container_name: php
        restart: always
        ports:
           - '80:80'
        expose:
           - '80'
        logging:
           driver: "gelf"
           options:
                gelf-address: "udp://172.16.0.8:12201"
                tag: "apache"
        networks:
           infra:
               ipv4_address: 172.16.0.5   
        volumes:
           - ./php/src:/var/www/html
        depends_on:
           - db
        links:
           - db
     db:
        image: 'mysql:5.7.30'
        container_name: mysql
        ports:
           - '3306:3306' 
        logging:
           driver: gelf
           options:
                gelf-address: "udp://172.16.0.8:12201"
                tag: db   
        networks:
           infra:
               ipv4_address: 172.16.0.4
        restart: always
        volumes:
           - ./db/src/databases:/var/lib/mysql
        environment:
           MYSQL_ROOT_PASSWORD: 456.123
           MYSQL_DATABASE: comentarios
     # MongoDB: https://hub.docker.com/_/mongo/
     mongo:
        image: 'mongo:3'
        container_name: mongo
        volumes:
           - ./mongo/src/databases:/data/db
        networks:
           infra:
               ipv4_address: 172.16.0.6
        restart: always
     # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/6.x/docker.html
     elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.5
        container_name: elastic
        networks:
           infra:
               ipv4_address: 172.16.0.7
        restart: always
        environment:
           - http.host=0.0.0.0
           - transport.host=localhost
           - network.host=0.0.0.0
           - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
     # Graylog: https://hub.docker.com/r/graylog/graylog/
     graylog:
        image: 'graylog/graylog:3.2'
        container_name: gray
        environment:
           - TZ=America/Sao_Paulo
           - GRAYLOG_ROOT_TIMEZONE=America/Sao_Paulo
        # CHANGE ME (must be at least 16 characters)!
           - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
           # Password: 456.123 / admin
           - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
         #  - GRAYLOG_ROOT_PASSWORD_SHA2=091ae61f6f0a6811d21f0057f3e3a2136654118a26ed825c5e078afb
           - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
           - GRAYLOG_ELASTICSEARCH_INDEX_PREFIX=graylog
        networks:
           infra:
               ipv4_address: 172.16.0.8
        restart: always
      # Mount local configuration directory into Docker container
        volumes:
           - ./graylog/src/config:/usr/share/graylog/data/config 
        depends_on:
           - mongo
           - elasticsearch
        ports:
        # Graylog web interface and REST API
           - '9000:9000'
        # Syslog TCP
           - '1514:1514'
        # Syslog UDP
           - '1514:1514/udp'
        # GELF TCP
           - '12201:12201'
        # GELF UDP
           - '12201:12201/udp'
     prometheus:
        image: 'prom/prometheus'
        container_name: prometh
        networks:
           infra:
               ipv4_address: 172.16.0.9
        restart: always
        volumes:
           - ./prometheus/src/prometheus.yml:/etc/prometheus/prometheus.yml
           - ./prometheus/src/alert.rules:/etc/prometheus/alert.rules
        command:
           - '--config.file=/etc/prometheus/prometheus.yml'
           - '--storage.tsdb.path=/prometheus'
#           - '--alertmanager.url=http://alertmanager:9093'
        ports:
           - '9090:9090'
     node-exporter:
        image: "prom/node-exporter"
        container_name: "node"
        ports:
            - '9100:9100'
        networks:
           infra:
               ipv4_address: 172.16.0.10
        restart: always
     cadvisor-exporter:
        container_name: "cadvisor-exporter"
        image: google/cadvisor
        ports:
#          - "9200:8080"
           - "8080:8080"
        networks:
           infra:
               ipv4_address: 172.16.0.11
        restart: always
        volumes:
          - "/:/rootfs:ro"
          - "/var/run:/var/run:rw"
          - "/sys:/sys:ro"
          - "/var/lib/docker/:/var/lib/docker:ro"
        deploy:
          mode: global
     alertmanager:
        image: prom/alertmanager
        container_name: alertmanager
        ports:
          - '9093:9093'
        volumes:
          - ./alertmanager/src/config.yml:/etc/alertmanager/config.yml
        networks:
          infra:
              ipv4_address: 172.16.0.12
        restart: always
        command:
          - '--config.file=/etc/alertmanager/config.yml'
          - '--storage.path=/alertmanager'
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}
     grafana:
        image: 'grafana/grafana'
        container_name: grafana
        user: "472"
        depends_on:
          - prometheus
        ports:
          - 3000:3000
        volumes:
          - ./grafana/src/data:/var/lib/grafana
          - ./grafana/src/provisioning/:/etc/grafana/provisioning/
        env_file:
          - ./grafana/src/config.monitoring
        networks:
          infra:
               ipv4_address: 172.16.0.13
        restart: always
networks:
     infra:
       driver: bridge
       driver_opts:
           com.docker.network.enable_ipv6: 'false'
       ipam:
           config:
              - subnet: 172.16.0.0/24
                
